<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>