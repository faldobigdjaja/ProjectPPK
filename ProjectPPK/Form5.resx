<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iAAAAABJRU5ErkJggg==
</value>
  </data>
</root>